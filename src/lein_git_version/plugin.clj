(ns lein-git-version.plugin
  (:require [clojure.java.io :as io]
            [clojure.string :as str]
            [leiningen.core.main]
            [leiningen.git-version :refer [get-git-version]]
            [robert.hooke :refer (add-hook)]))

(def ^:private default-keys {:assoc-in-keys [[:version]]
                             :filename "version.clj"})
                   
(defn- version-file [{:keys [git-version group name source-paths]}]
  (let [config (merge default-keys git-version)
        srcpath (first (filter seq (map #(re-find #".*src$" %) source-paths)))]
    (str/replace 
     (->> (conj [] 
                srcpath 
                (if (seq group) (str/replace group "." "/"))
                name
                (:filename config))
          (filter seq)
          (interpose "/")
          (apply str)) 
     "-" "_")))

(defn- write-to-version-file [func task-name project args]
  (let [{:keys [group name]} project
        namespace (apply str (interpose "." (filter seq (conj [] group name "version"))))
        code [";; Do not edit.  Generated by lein-git-version plugin."
              (str "(ns " namespace ")")
              ""
              (str "(def version \"" (get-git-version) "\")")
              ""]]
    (spit (version-file project) (str/join "\n" code))
    (func task-name project args)))

(defn middleware
  [{:keys [git-version] :as project}]
  (let [config (merge default-keys git-version)
        version (get-git-version config)]
    (reduce #(assoc-in %1 %2 version) project (:assoc-keys config))))

(defn hooks []
  (add-hook #'leiningen.core.main/apply-task #'write-to-version-file))
